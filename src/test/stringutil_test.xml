<?xml version="1.0"?>

<project name="stringutil_test" basedir="." default="test1" >
   <description>
        test build file for the StringUtil task
    </description>
   

   <target name="test1">
      <property name="prop1" value="ABCDE"/>
      <echo>prop1 before = ${prop1}</echo>
      <stringutil string="${prop1}" property="prop1">
         <lowercase/>
      </stringutil>
      <echo>prop1 after = ${prop1}</echo>
      <assert message="prop1, expected abcde, got ${prop1}">
         <bool>
            <equals arg1="abcde" arg2="${prop1}"/>
         </bool>
      </assert>
   </target>

   <target name="test2">
      <property name="prop2" value="abcdefgh"/>
      <echo>prop2 before = ${prop2}</echo>
      <stringutil string="${prop2}" property="prop2">
         <uppercase/>
      </stringutil>
      <echo>prop2 after = ${prop2}</echo>
      <assert message="prop2, expected ABCDEFGH, got ${prop2}">
         <bool>
            <equals arg1="ABCDEFGH" arg2="${prop2}"/>
         </bool>
      </assert>
   </target>

   <target name="test3">
      <property name="prop3" value=" abcdefgh "/>
      <echo>prop3 before = ${prop3}</echo>
      <stringutil string="${prop3}" property="prop3">
         <uppercase/>
         <trim/>
      </stringutil>
      <echo>prop3 after = ${prop3}</echo>
      <assert message="prop3, expected ABCDEFGH, got ${prop3}">
         <bool>
            <equals arg1="ABCDEFGH" arg2="${prop3}"/>
         </bool>
      </assert>
   </target>

   <target name="test4">
      <property name="prop4" value=" abcdefgh "/>
      <echo>prop4 before = ${prop4}</echo>
      <stringutil string="${prop4}" property="prop4">
         <uppercase/>
         <trim/>
         <substring beginindex="3"/>
      </stringutil>
      <echo>prop4 after = ${prop4}</echo>
      <assert message="prop4, expected DEFGH, got ${prop4}">
         <bool>
            <equals arg1="DEFGH" arg2="${prop4}"/>
         </bool>
      </assert>
   </target>

   <target name="test5">
      <property name="prop5" value=" abcdefgh "/>
      <echo>prop5 before = ${prop5}</echo>
      <stringutil string="${prop5}" property="prop5">
         <uppercase/>
         <trim/>
         <substring beginindex="3" endindex="6"/>
      </stringutil>
      <echo>prop5 after = ${prop5}</echo>
      <assert message="prop5, expected DEF, got ${prop5}">
         <bool>
            <equals arg1="DEF" arg2="${prop5}"/>
         </bool>
      </assert>
   </target>

   <target name="test5a">
      <property name="prop5a" value=" abcdefgh "/>
      <try printmessage="false">
         <echo>prop5a before = ${prop5a}</echo>
         <stringutil string="${prop5a}" property="prop5a">
            <substring beginindex="6" endindex="3"/>
         </stringutil>

         <catch>
            <echo>test5a passed</echo>
         </catch>
      </try>
   </target>

   <target name="test6">
      <property name="prop6" value=" abcdefgh "/>
      <echo>prop6 before = ${prop6}</echo>
      <stringutil string="${prop6}" property="prop6">
         <uppercase/>
         <trim/>
         <substring beginindex="3" endindex="6"/>
         <replace regex="[D]" replacement="ZZZ"/>
      </stringutil>
      <echo>prop6 after = ${prop6}</echo>
      <assert message="prop6, expected ZZZEF, got ${prop6}">
         <bool>
            <equals arg1="ZZZEF" arg2="${prop6}"/>
         </bool>
      </assert>
   </target>

   <target name="test7">
      <property name="prop7" value="abcdefgh"/>
      <echo>prop7 before = ${prop7}</echo>
      <stringutil string="${prop7}" property="prop7">
         <length/>
      </stringutil>
      <echo>prop7 length = ${prop7}</echo>
      <assert message="prop7, expected 8, got ${prop7}">
         <bool>
            <mathequals arg1="8" arg2="${prop7}"/>
         </bool>
      </assert>
   </target>

   <target name="test8">
      <property name="prop8" value="abcdefgh"/>
      <echo>prop8 before = ${prop8}</echo>
      <stringutil string="${prop8}" property="prop8">
         <indexof string="cd"/>
      </stringutil>
      <echo>prop8 indexof cd = ${prop8}</echo>
      <assert message="prop8, expected 2, got ${prop8}">
         <bool>
            <mathequals arg1="2" arg2="${prop8}"/>
         </bool>
      </assert>
   </target>

   <target name="test9">
      <property name="prop9" value="abcdefghabcdefgh"/>
      <echo>prop9 before = ${prop9}</echo>
      <stringutil string="${prop9}" property="prop9">
         <indexof string="cd" fromindex="9"/>
      </stringutil>
      <echo>prop9 indexof cd = ${prop9}</echo>
      <assert message="prop9, expected 10, got ${prop9}">
         <bool>
            <mathequals arg1="10" arg2="${prop9}"/>
         </bool>
      </assert>
   </target>

   <target name="test10">
      <property name="prop10" value="abcdefghabcdefgh"/>
      <echo>prop10 before = ${prop10}</echo>
      <stringutil string="${prop10}" property="prop10">
         <lastindexof string="cd"/>
      </stringutil>
      <echo>prop10 lastindexof cd = ${prop10}</echo>
      <assert message="prop10, expected 10, got ${prop10}">
         <bool>
            <mathequals arg1="10" arg2="${prop10}"/>
         </bool>
      </assert>
   </target>

   <target name="test11">
      <property name="prop11" value="abcdefghabcdefgh"/>
      <echo>prop11 before = ${prop11}</echo>
      <stringutil string="${prop11}" property="prop11">
         <lastindexof string="cd" fromindex="8"/>
      </stringutil>
      <echo>prop11 lastindexof cd = ${prop11}</echo>
      <assert message="prop11, expected 2, got ${prop11}">
         <bool>
            <mathequals arg1="2" arg2="${prop11}"/>
         </bool>
      </assert>
   </target>
   
   <target name="test12">
      <property name="prop12" value="a,b,c,d,e,f,g,h,a,b,c,d,e,f,g,h"/>
      <echo>prop12 before = ${prop12}</echo>
      <stringutil string="${prop12}" property="prop12">
         <sort separator=","/>
      </stringutil>
      <echo>prop12 sorted = ${prop12}</echo>
      <assert message="prop12, expected 'a,a,b,b,c,c,d,d,e,e,f,f,g,g,h,h', got ${prop12}">
         <bool>
            <equals arg1="a,a,b,b,c,c,d,d,e,e,f,f,g,g,h,h" arg2="${prop12}"/>
         </bool>
      </assert>
   </target>
   
   <target name="test12a">
      <property name="prop12a" value="a b c d e f g h a b c d e f g h"/>
      <echo>prop12a before = ${prop12a}</echo>
      <stringutil string="${prop12a}" property="prop12a">
         <sort/>
      </stringutil>
      <echo>prop12a sorted = ${prop12a}</echo>
      <assert message="prop12a, expected 'a,a,b,b,c,c,d,d,e,e,f,f,g,g,h,h', got ${prop12a}">
         <bool>
            <equals arg1="a,a,b,b,c,c,d,d,e,e,f,f,g,g,h,h" arg2="${prop12a}"/>
         </bool>
      </assert>
   </target>
   
   <target name="test13">
      <property name="prop13" value="Character boundary analysis allows users to interact with characters as they expect to, for example, when moving the cursor around through a text string. Character boundary analysis provides correct navigation of through character strings, regardless of how the character is stored. For example, an accented character might be stored as a base character and a diacritical mark. What users consider to be a character can differ between languages."/>
      <echo>prop13 before = ${prop13}</echo>
      <stringutil string="${prop13}" property="prop13">
         <messagebox/>
      </stringutil>
      <echo>prop13 in messagebox:${line.separator}${prop13}</echo>

      <property name="prop13a" value="Character boundary analysis allows users to interact with characters as they expect to, for example, when moving the cursor around through a text string. Character boundary analysis provides correct navigation of through character strings, regardless of how the character is stored. For example, an accented character might be stored as a base character and a diacritical mark. What users consider to be a character can differ between languages."/>
      <stringutil string="${prop13a}" property="prop13a">
         <messagebox title="About Character Boundaries"/>
      </stringutil>
      <echo>prop13a in messagebox with title:${line.separator}${prop13a}</echo>
      
      <property name="prop13b" value="A short message."/>
      <stringutil string="${prop13b}" property="prop13b">
         <messagebox title="Short Message"/>
      </stringutil>
      <echo>prop13b in messagebox with title:${line.separator}${prop13b}</echo>
      
   </target>
   
   <target name="test14">
      <property name="Prop1" value="/my/folder/"/>
      <property name="Prop2" value="/my other folder/"/>
      <property name="Prop3" value="${Prop1}${Prop2}"/>
      <stringutil string="${Prop2}" property="Prop2">
          <substring beginindex="1"/>
      </stringutil>
      <echo>${Prop1}${Prop2}</echo>
      
      <stringutil string="${Prop3}" property="Prop3">
         <replace regex="//" replacement="/"/>
      </stringutil>
      <echo>${Prop3}</echo>

      
      
   </target>
   
   <target name="test15">
      <property name="version" value="5.1.18.0"/>
      <stringutil string="${version}" property="minor_index">
         <indexOf string="." fromindex="4"/>
      </stringutil>
      <stringutil string="${version}" property="minor_version">
         <substring beginindex="4" endindex="${minor_index}"/>
      </stringutil>
      <echo>Minor version = ${minor_version}</echo>
   </target>


</project>
